include: 
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  stage: test
  artifacts:
    paths: [gl-code-quality-report.json]

build-back:
  image: maven:3.6.2-jdk-11
  stage: build
  script:
  - cd spoon-backend
  - mvn -U clean package
  #- docker build -t bribridnl/spoon-backend:latest .
  #- docker save spoon-backend | xz > target/spoon-backend-docker.tar.xz
  # docker run -it --publish 4444:4444 --name spoon-backend bribridnl/spoon-backend:latest
  artifacts:
    paths:
      - spoon-backend/target/spoon-backend-1.0.0.jar
    expire_in: 1 hour



build-front:
  image: node:12.13
  stage: build
  #cache:
  #  paths:
  #    -node_modules/
  script:
    - cd spoon-frontend
    - npm install
    - npm run ng build --prod --build-optimizer
    #- docker build -t bribridnl/spoon-frontend:latest .
    # docker run -d -it -p 8080:8080/tcp --network=host --name spoon-frontend bribridnl/spoon-frontend:latest
  artifacts:
    paths:
      - spoon-frontend/nginx.conf
      - spoon-frontend/dist/spoon-frontend
    expire_in: 1 hour

test-front-karma:
  image: trion/ng-cli-karma:latest
  stage: test-front
  dependencies:
    - build-front
  script:
    - cd spoon-frontend
    - npm install
    - npm run ng test


test-front-e2e:
  image: trion/ng-cli-e2e:latest
  stage: test-e2e
  dependencies:
    - build-back
  allow_failure: true
  script:
    - echo 'deb http://ftp.debian.org/debian stretch-backports main' | tee /etc/apt/sources.list.d/strecth-backports.list
    - apt-get update
    - apt-get install -y openjdk-11-jre-headless
    - update-alternatives --auto java
    - java -version
    - java -jar ./spoon-web/spoon-backend/target/spoon-backend-1.0.0.jar &
    - cd spoon-web/spoon-frontend
    - npm install
    - npm run ng e

docker-back:
  image: docker:18.06
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GIT_SSL_NO_VERIFY: "1"
  dependencies:
    - build-back
  #cache:
  #  key: "$CI_BUILD_REF_NAME"
  services:
    - docker:18.06-dind
  before_script:
    - echo $CI_BUILD_REF_NAME
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_REGISTRY_NAME
    - echo $CI_COMMIT_SHA
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd spoon-backend
    - docker pull ${CI_REGISTRY_IMAGE}:spoon-backend-latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}-spoon-backend:latest --tag ${CI_REGISTRY_IMAGE}:spoon-backend-${CI_COMMIT_SHA} --tag ${CI_REGISTRY_IMAGE}:spoon-backend-latest .
    - docker push ${CI_REGISTRY_IMAGE}:spoon-backend-${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:spoon-backend-latest

docker-front:
  image: docker:18.06
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GIT_SSL_NO_VERIFY: "1"
  dependencies:
    - build-front
  services:
    - docker:18.06-dind
  before_script:
    - echo $CI_BUILD_REF_NAME
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_REGISTRY_NAME
    - echo $CI_COMMIT_SHA
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd spoon-frontend
    - pwd
    - ls -a
    - docker pull ${CI_REGISTRY_IMAGE}:spoon-frontend-latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}-spoon-frontend:latest --tag ${CI_REGISTRY_IMAGE}:spoon-frontend-${CI_COMMIT_SHA} --tag ${CI_REGISTRY_IMAGE}:spoon-frontend-latest .
    - docker push ${CI_REGISTRY_IMAGE}:spoon-frontend-${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:spoon-frontend-latest
